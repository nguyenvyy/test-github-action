# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prepare:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.naming.outputs.environment }}
      sequence: ${{ steps.naming.outputs.sequence }}
    environment: prd
    defaults:
      run:
        shell: pwsh
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Naming
        id: naming
        run: |
          $environment = 'prd'
          $sequence = 1
          echo "sequence=$sequence" >> $env:GITHUB_OUTPUT
          echo "environment=$environment" >> $env:GITHUB_OUTPUT
          
          
  # This workflow contains a single job called "build"
  build:
    needs: prepare
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: prd

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
    
      - name: Test
        shell: pwsh
        run: |
          $envChar = "${{ vars.ENVIRONMENT_CHAR }}"
          $appUrl = "${{ vars.UMBRACO_APP_URL }}"

          echo "this is ${ appUrl }"
  build-test:
    needs: prepare
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: tst

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
    
      - name: Test
        shell: pwsh
        run: |
          $envChar = "${{ vars.ENVIRONMENT_CHAR }}"
          $appUrl = "${{ vars.UMBRACO_APP_URL }}"

          echo "this is ${ appUrl }"

